#!/bin/sh

me=`basename $0`

usage () {
    cat <<EOF >&2
Usage: $me [options] PROFILE [MAIRIX_ARGS]
Options (must be in order specified above!)
  --view      View search results (if any)
  --help, -h  Display this help
EOF
    exit 1
}

if [ "$1" == -h ] || [ "$1" == --help ]; then
    usage
fi

if [ "$1" = --view ]; then
    view=yes
    shift
fi

if [ $# -lt 1 ]; then
    usage
fi

profile="$1"
shift
profile_conf=$HOME/lib/$profile-mail.sh

if ! [ -e "$profile_conf" ]; then
    echo "Couldn't find $profile_conf" >&2
    usage
fi

. "$profile_conf"

ionice -c 3 mairix -f $MAIRIXRC "$@"
mairix_exit=$?

if [ -n "$view" ]; then
    if [ $mairix_exit = 0 ]; then
        # Don't background this xterm call here!  If you do, calling
        # this wrapper script within emacs will have the following
        # behaviour:
        #
        # - If invoked via M-x shell-command mairix-profile ... &
        #   the xterm will never launch.
        # - If invoked via M-x shell-command mairix-profile ...
        #   emacs will hang until the xterm completes.
        #
        # Presumably this is due to some deficiency in the job control
        # capabilities of the shell launched by `shell-command'.
        urxvt -title "mairix search: $*" \
              -e sh -c "unset COLUMNS;
                  neomutt -F ~/.mutt/$MAIL_PROFILE \
                       -f $MAIRIX_RESULTS \
                       -e 'push <display-message>'
                 "
    else
        echo "mairix search failed; will not launch xterm" >&2
    fi
fi

exit $mairix_exit
